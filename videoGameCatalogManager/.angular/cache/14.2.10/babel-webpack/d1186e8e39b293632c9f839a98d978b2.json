{"ast":null,"code":"import _asyncToGenerator from \"D:/Prog Gyak/SpringBootAngular/VideoGameCatalog/videoGameCatalogManager/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DeleteDialogComponent } from 'src/app/components/delete-dialog/delete-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/data.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/cdk/text-field\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\n\nfunction GameDetailsComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function GameDetailsComponent_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.openDeletePrompt());\n    });\n    i0.ɵɵtext(1, \" Delete\");\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"delete\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class GameDetailsComponent {\n  constructor(router, dataService, snackBar, cdr, dialog) {\n    this.router = router;\n    this.dataService = dataService;\n    this.snackBar = snackBar;\n    this.cdr = cdr;\n    this.dialog = dialog;\n    this.gameDetailsForm = new FormGroup({\n      id: new FormControl(null),\n      name: new FormControl(null, Validators.required),\n      developer: new FormControl(null, Validators.required),\n      genre: new FormControl(null),\n      playerMode: new FormControl(null),\n      description: new FormControl(null),\n      imageUrl: new FormControl(null, Validators.required)\n    });\n    this.operation = \"\";\n    this.id = \"\";\n  }\n\n  ngOnInit() {\n    this.getSegmentsFromUrl(this.router.url);\n    console.log(\"Operation: \" + this.operation);\n    console.log(\"Id: \" + this.id);\n\n    if (this.id) {\n      this.getGameData();\n    }\n  }\n\n  getGameData() {\n    this.dataService.getGameById(+this.id).subscribe({\n      next: response => {\n        this.gameDetailsForm.setValue(response);\n        this.getImage();\n      },\n      error: e => {\n        this.snackBar.open(e.error.message, \"Close\", {\n          duration: 4000,\n          horizontalPosition: 'right',\n          panelClass: \"snackBar-error\"\n        });\n        this.router.navigate([\"/games\"]);\n      }\n    });\n  }\n\n  getSegmentsFromUrl(url) {\n    let urlArray = url.split(\"/\");\n    this.operation = urlArray[2];\n    this.id = urlArray[3];\n  }\n\n  navigateBack() {\n    this.router.navigate([\"/games\"]);\n  }\n\n  saveGame() {\n    if (this.gameDetailsForm.invalid) {\n      this.gameDetailsForm.markAllAsTouched();\n      return;\n    }\n\n    const gameToBeSaved = {\n      id: this.gameDetailsForm.value.id,\n      name: this.gameDetailsForm.value.name,\n      developer: this.gameDetailsForm.value.developer,\n      genre: this.gameDetailsForm.value.genre,\n      playerMode: this.gameDetailsForm.value.playerMode,\n      description: this.gameDetailsForm.value.description,\n      imageUrl: this.gameDetailsForm.value.imageUrl\n    };\n\n    if (this.operation === \"add\") {\n      this.dataService.addGame(gameToBeSaved).subscribe({\n        next: response => {\n          this.snackBar.open('Game Saved', \"Close\", {\n            duration: 2000,\n            horizontalPosition: 'right',\n            panelClass: \"snackBar-success\"\n          });\n          this.router.navigate([`/games/edit/${response.id}`]);\n        },\n        error: e => {\n          this.snackBar.open(e.error.message, \"Close\", {\n            duration: 4000,\n            horizontalPosition: 'right',\n            panelClass: \"snackBar-error\"\n          });\n        }\n      });\n    }\n\n    if (this.operation === \"edit\") {\n      this.dataService.updateGame(gameToBeSaved).subscribe({\n        next: response => {\n          this.snackBar.open('Game Saved', \"Close\", {\n            duration: 2000,\n            horizontalPosition: 'right',\n            panelClass: \"snackBar-success\"\n          });\n        },\n        error: e => {\n          this.snackBar.open(e.error.message, \"Close\", {\n            duration: 4000,\n            horizontalPosition: 'right',\n            panelClass: \"snackBar-error\"\n          });\n        }\n      });\n    }\n  }\n\n  deleteGame() {\n    this.dataService.deleteGame(+this.id).subscribe({\n      next: response => {\n        this.snackBar.open('Game Deleted', \"Close\", {\n          duration: 2000,\n          horizontalPosition: 'right',\n          panelClass: \"snackBar-success\"\n        });\n        this.router.navigate([\"/games\"]);\n      },\n      error: e => {\n        this.snackBar.open(e.error.message, \"Close\", {\n          duration: 4000,\n          horizontalPosition: 'right',\n          panelClass: \"snackBar-error\"\n        });\n      }\n    });\n  }\n\n  openDeletePrompt() {\n    // Need to detach form change detection because of performance issue\n    this.cdr.detach();\n    let dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: {\n        name: this.gameDetailsForm.value.name,\n        operation: \"Delete\"\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // Reattach here\n      this.cdr.reattach();\n\n      if (result === \"Delete\") {\n        this.deleteGame();\n      }\n    });\n  }\n\n  getImage() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const img = new Image();\n      img.src = _this.gameDetailsForm.value.imageUrl;\n      let canImageLoad = yield new Promise(resolve => {\n        img.onerror = res => {\n          console.log(res);\n          resolve(false.valueOf());\n        };\n\n        img.onload = res => {\n          console.log(res);\n          resolve(true);\n        };\n      });\n\n      if (canImageLoad) {\n        return _this.gameDetailsForm.value.imageUrl;\n      } else {\n        return '../../../../assets/images/placeholder.png';\n      }\n    })();\n  }\n\n}\n\nGameDetailsComponent.ɵfac = function GameDetailsComponent_Factory(t) {\n  return new (t || GameDetailsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i4.MatDialog));\n};\n\nGameDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameDetailsComponent,\n  selectors: [[\"app-game-details\"]],\n  decls: 56,\n  vars: 9,\n  consts: [[1, \"container\"], [1, \"page-title-row\", \"row\"], [1, \"row-left\", \"col-md-4\", \"lh-1\"], [1, \"text-danger\"], [1, \"row-right\", \"justify-content-between\", \"justify-content-md-end\", \"col-md-8\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"m-2\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"class\", \"m-2\", 3, \"click\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"row\", \"mt-3\"], [1, \"col-md-4\"], [1, \"game-image\", \"pb-3\", 3, \"src\", \"alt\"], [1, \"col-md-8\"], [1, \"row\"], [\"appearance\", \"fill\", 1, \"mb-3\"], [\"matInput\", \"\", \"formControlName\", \"name\"], [3, \"ngClass\"], [\"matInput\", \"\", \"formControlName\", \"developer\"], [\"matInput\", \"\", \"formControlName\", \"genre\"], [\"matInput\", \"\", \"formControlName\", \"playerMode\"], [1, \"col-md-12\"], [\"appearance\", \"fill\", 1, \"w-100\", \"mb-3\"], [\"matInput\", \"\", \"formControlName\", \"imageUrl\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"1\", \"cdkAutosizeMaxRows\", \"5\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 1, \"m-2\", 3, \"click\"]],\n  template: function GameDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"span\", 3);\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function GameDetailsComponent_Template_button_click_8_listener() {\n        return ctx.saveGame();\n      });\n      i0.ɵɵtext(9, \" Save\");\n      i0.ɵɵelementStart(10, \"mat-icon\");\n      i0.ɵɵtext(11, \"save\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, GameDetailsComponent_button_12_Template, 4, 0, \"button\", 6);\n      i0.ɵɵelementStart(13, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function GameDetailsComponent_Template_button_click_13_listener() {\n        return ctx.navigateBack();\n      });\n      i0.ɵɵtext(14, \" Back\");\n      i0.ɵɵelementStart(15, \"mat-icon\");\n      i0.ɵɵtext(16, \"arrow_back\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"div\", 8)(19, \"div\", 9);\n      i0.ɵɵelement(20, \"img\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"div\", 12)(23, \"mat-form-field\", 13)(24, \"mat-label\");\n      i0.ɵɵtext(25, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 14);\n      i0.ɵɵelementStart(27, \"mat-hint\", 15);\n      i0.ɵɵtext(28, \" Name field cannot be empty! \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"mat-form-field\", 13)(30, \"mat-label\");\n      i0.ɵɵtext(31, \"Developer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"input\", 16);\n      i0.ɵɵelementStart(33, \"mat-hint\", 15);\n      i0.ɵɵtext(34, \" Developer field cannot be empty! \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(35, \"mat-form-field\", 13)(36, \"mat-label\");\n      i0.ɵɵtext(37, \"Genre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"mat-form-field\", 13)(40, \"mat-label\");\n      i0.ɵɵtext(41, \"Player Mode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(42, \"input\", 18);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(43, \"div\", 19)(44, \"mat-form-field\", 20)(45, \"mat-label\");\n      i0.ɵɵtext(46, \"Image Url\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(47, \"input\", 21);\n      i0.ɵɵelementStart(48, \"mat-hint\", 15);\n      i0.ɵɵtext(49, \" Image Url field cannot be empty! \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(50, \"div\", 19)(51, \"mat-form-field\", 20)(52, \"mat-label\");\n      i0.ɵɵtext(53, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"textarea\", 22);\n      i0.ɵɵtext(55, \"                    \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.operation === \"add\" ? \"Add \" : \"Edit \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.operation === \"add\" ? \"New Game\" : ctx.gameDetailsForm.value.name);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.operation === \"edit\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.gameDetailsForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"src\", ctx.getImage(), i0.ɵɵsanitizeUrl)(\"alt\", ctx.gameDetailsForm.value.name ? ctx.gameDetailsForm.value.name : \"Placeholder Image\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngClass\", ctx.gameDetailsForm.get(\"name\").invalid && ctx.gameDetailsForm.get(\"name\").touched ? \"error-message\" : \"d-none\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", ctx.gameDetailsForm.get(\"developer\").invalid && ctx.gameDetailsForm.get(\"developer\").touched ? \"error-message\" : \"d-none\");\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngClass\", ctx.gameDetailsForm.get(\"imageUrl\").invalid && ctx.gameDetailsForm.get(\"imageUrl\").touched ? \"error-message\" : \"d-none\");\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgIf, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i7.MatButton, i8.MatIcon, i9.CdkTextareaAutosize, i10.MatFormField, i10.MatHint, i10.MatLabel, i11.MatInput],\n  styles: [\"button[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  padding: 0.2rem 1rem;\\n}\\nbutton[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%] {\\n  margin-left: 0.5rem;\\n}\\n.game-image[_ngcontent-%COMP%] {\\n  height: 100%;\\n  max-height: 440px;\\n  width: 100%;\\n  max-width: 400px;\\n}\\n.error-message[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbWUtZGV0YWlscy5jb21wb25lbnQuc2NzcyIsIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXFByb2clMjBHeWFrXFxTcHJpbmdCb290QW5ndWxhclxcVmlkZW9HYW1lQ2F0YWxvZ1xcdmlkZW9HYW1lQ2F0YWxvZ01hbmFnZXJcXHNyY1xcYXBwXFxwYWdlc1xcZ2FtZXNcXGdhbWUtZGV0YWlsc1xcZ2FtZS1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBQTtFQUNBLG9CQUFBO0FDQ0o7QURDSTtFQUNJLG1CQUFBO0FDQ1I7QURHQTtFQUNJLFlBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQ0FKO0FESUE7RUFDSSxVQUFBO0VBQ0EsZUFBQTtBQ0RKIiwiZmlsZSI6ImdhbWUtZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcclxuICAgIGZvbnQtc2l6ZTogMjRweDtcclxuICAgIHBhZGRpbmc6IC4ycmVtIDFyZW07XHJcblxyXG4gICAgbWF0LWljb257XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC41cmVtO1xyXG4gICAgfVxyXG59XHJcblxyXG4uZ2FtZS1pbWFnZXtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1heC1oZWlnaHQ6IDQ0MHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG5cclxuLmVycm9yLW1lc3NhZ2V7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59IiwiYnV0dG9uIHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBwYWRkaW5nOiAwLjJyZW0gMXJlbTtcbn1cbmJ1dHRvbiBtYXQtaWNvbiB7XG4gIG1hcmdpbi1sZWZ0OiAwLjVyZW07XG59XG5cbi5nYW1lLWltYWdlIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXgtaGVpZ2h0OiA0NDBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogNDAwcHg7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAxNHB4O1xufSJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ChangeDetectorRef","FormControl","FormGroup","Validators","Router","DeleteDialogComponent","i0","GameDetailsComponent","constructor","router","dataService","snackBar","cdr","dialog","id","name","required","developer","genre","playerMode","description","imageUrl","ngOnInit","getSegmentsFromUrl","url","console","log","operation","getGameData","getGameById","subscribe","next","response","gameDetailsForm","setValue","getImage","error","e","open","message","duration","horizontalPosition","panelClass","navigate","urlArray","split","navigateBack","saveGame","invalid","markAllAsTouched","gameToBeSaved","value","addGame","updateGame","deleteGame","openDeletePrompt","detach","dialogRef","data","afterClosed","result","reattach","img","Image","src","canImageLoad","Promise","resolve","onerror","res","valueOf","onload","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Prog Gyak\\SpringBootAngular\\VideoGameCatalog\\videoGameCatalogManager\\src\\app\\pages\\games\\game-details\\game-details.component.ts","D:\\Prog Gyak\\SpringBootAngular\\VideoGameCatalog\\videoGameCatalogManager\\src\\app\\pages\\games\\game-details\\game-details.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DeleteDialogComponent } from 'src/app/components/delete-dialog/delete-dialog.component';\nimport { VideoGame } from 'src/models/video-game';\nimport { DataService } from 'src/services/data.service';\n\n@Component({\n  selector: 'app-game-details',\n  templateUrl: './game-details.component.html',\n  styleUrls: ['./game-details.component.scss']\n})\nexport class GameDetailsComponent implements OnInit {\n\n  public gameDetailsForm = new FormGroup({\n    id: new FormControl(null),\n    name: new FormControl(null, Validators.required),\n    developer: new FormControl(null, Validators.required),\n    genre: new FormControl(null),\n    playerMode: new FormControl(null),\n    description: new FormControl(null),\n    imageUrl: new FormControl(null, Validators.required)\n  })\n\n  public operation: string = \"\";\n  public id: string = \"\";\n  public canImageLoad;\n\n  constructor(private router: Router,\n    private dataService: DataService,\n    private snackBar: MatSnackBar,\n    private cdr: ChangeDetectorRef,\n    private dialog: MatDialog) {\n  }\n\n  public ngOnInit(): void {\n    this.getSegmentsFromUrl(this.router.url)\n    console.log(\"Operation: \" + this.operation)\n    console.log(\"Id: \" + this.id)\n    if (this.id) {\n      this.getGameData();\n    }\n  }\n\n  public getGameData(): void {\n    this.dataService.getGameById(+this.id).subscribe({\n      next: (response: VideoGame) => {\n        this.gameDetailsForm.setValue(response);\n        this.getImage()\n      },\n      error: (e) => {\n        this.snackBar.open(e.error.message, \"Close\",\n          { duration: 4000, horizontalPosition: 'right', panelClass: \"snackBar-error\" });\n        this.router.navigate([\"/games\"])\n      }\n    })\n  }\n\n  private getSegmentsFromUrl(url: string): void {\n    let urlArray = url.split(\"/\")\n    this.operation = urlArray[2];\n    this.id = urlArray[3];\n  }\n\n  public navigateBack(): void {\n    this.router.navigate([\"/games\"])\n  }\n\n  public saveGame(): void {\n    if (this.gameDetailsForm.invalid) {\n      this.gameDetailsForm.markAllAsTouched();\n      return\n    }\n    const gameToBeSaved: VideoGame = {\n      id: this.gameDetailsForm.value.id,\n      name: this.gameDetailsForm.value.name,\n      developer: this.gameDetailsForm.value.developer,\n      genre: this.gameDetailsForm.value.genre,\n      playerMode: this.gameDetailsForm.value.playerMode,\n      description: this.gameDetailsForm.value.description,\n      imageUrl: this.gameDetailsForm.value.imageUrl\n    }\n\n    if (this.operation === \"add\") {\n      this.dataService.addGame(gameToBeSaved).subscribe({\n        next: (response) => {\n          this.snackBar.open('Game Saved', \"Close\",\n            { duration: 2000, horizontalPosition: 'right', panelClass: \"snackBar-success\" });\n          this.router.navigate([`/games/edit/${response.id}`])\n        },\n        error: (e) => {\n          this.snackBar.open(e.error.message, \"Close\",\n            { duration: 4000, horizontalPosition: 'right', panelClass: \"snackBar-error\" });\n        }\n      })\n    }\n    if (this.operation === \"edit\") {\n      this.dataService.updateGame(gameToBeSaved).subscribe({\n        next: (response) => {\n          this.snackBar.open('Game Saved', \"Close\",\n            { duration: 2000, horizontalPosition: 'right', panelClass: \"snackBar-success\" });\n        },\n        error: (e) => {\n          this.snackBar.open(e.error.message, \"Close\",\n            { duration: 4000, horizontalPosition: 'right', panelClass: \"snackBar-error\" });\n        }\n      })\n    }\n  }\n\n  public deleteGame(): void {\n    this.dataService.deleteGame(+this.id).subscribe({\n      next: (response) => {\n        this.snackBar.open('Game Deleted', \"Close\",\n          { duration: 2000, horizontalPosition: 'right', panelClass: \"snackBar-success\" });\n        this.router.navigate([\"/games\"]);\n      },\n      error: (e) => {\n        this.snackBar.open(e.error.message, \"Close\",\n          { duration: 4000, horizontalPosition: 'right', panelClass: \"snackBar-error\" });\n      }\n    })\n  }\n\n  public openDeletePrompt(): void {\n    // Need to detach form change detection because of performance issue\n    this.cdr.detach();\n\n    let dialogRef = this.dialog.open(DeleteDialogComponent,\n      {\n        data: { name: this.gameDetailsForm.value.name, operation: \"Delete\" }\n      });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      // Reattach here\n      this.cdr.reattach();\n\n      if (result === \"Delete\") {\n        this.deleteGame();\n      }\n    })\n  }\n\n  public async getImage() {\n    const img = new Image();\n    img.src = this.gameDetailsForm.value.imageUrl;\n    let canImageLoad = await new Promise((resolve) => {\n      img.onerror = (res) => {\n        console.log(res);\n        resolve(false.valueOf())\n      };\n      img.onload = (res) => {\n        console.log(res);\n        resolve(true)\n      };\n    });\n\n    if (canImageLoad) {\n      return this.gameDetailsForm.value.imageUrl;\n    } else {\n      return '../../../../assets/images/placeholder.png';\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"page-title-row row\">\n        <div class=\"row-left col-md-4 lh-1\">\n            <span>{{operation === 'add' ? \"Add \" : \"Edit \"}}</span>\n            <span class=\"text-danger\">{{operation === 'add' ? \"New Game\" : gameDetailsForm.value.name }}</span>\n        </div>\n        <div class=\"row-right justify-content-between justify-content-md-end col-md-8\">\n            <button mat-raised-button color=\"primary\" class=\"m-2\" (click)=\"saveGame()\">\n                Save<mat-icon>save</mat-icon>\n            </button>\n            <button *ngIf=\"operation === 'edit'\" mat-raised-button color=\"warn\" class=\"m-2\"\n                (click)=\"openDeletePrompt()\">\n                Delete<mat-icon>delete</mat-icon>\n            </button>\n            <button mat-raised-button color=\"primary\" class=\"m-2\" (click)=\"navigateBack()\">\n                Back<mat-icon>arrow_back</mat-icon>\n            </button>\n        </div>\n    </div>\n    <div [formGroup]=\"gameDetailsForm\">\n        <div class=\"row mt-3\">\n            <div class=\"col-md-4\">\n                <img class=\"game-image pb-3\" [src]=\"getImage()\"\n                    [alt]=\"gameDetailsForm.value.name ? gameDetailsForm.value.name: 'Placeholder Image'\">\n            </div>\n            <div class=\"col-md-8\">\n                <div class=\"row\">\n                    <mat-form-field class=\"mb-3\" appearance=\"fill\">\n                        <mat-label>Name</mat-label>\n                        <input matInput formControlName=\"name\">\n                        <mat-hint\n                            [ngClass]=\"gameDetailsForm.get('name').invalid && gameDetailsForm.get('name').touched ? 'error-message' : 'd-none'\">\n                            Name field cannot be empty!\n                        </mat-hint>\n                    </mat-form-field>\n                    <mat-form-field class=\"mb-3\" appearance=\"fill\">\n                        <mat-label>Developer</mat-label>\n                        <input matInput formControlName=\"developer\">\n                        <mat-hint\n                            [ngClass]=\"gameDetailsForm.get('developer').invalid && gameDetailsForm.get('developer').touched ? 'error-message' : 'd-none'\">\n                            Developer field cannot be empty!\n                        </mat-hint>\n                    </mat-form-field>\n                    <mat-form-field class=\"mb-3\" appearance=\"fill\">\n                        <mat-label>Genre</mat-label>\n                        <input matInput formControlName=\"genre\">\n                    </mat-form-field>\n                    <mat-form-field class=\"mb-3\" appearance=\"fill\">\n                        <mat-label>Player Mode</mat-label>\n                        <input matInput formControlName=\"playerMode\">\n                    </mat-form-field>\n                </div>\n            </div>\n            <div class=\"col-md-12\">\n                <mat-form-field class=\"w-100 mb-3\" appearance=\"fill\">\n                    <mat-label>Image Url</mat-label>\n                    <input matInput formControlName=\"imageUrl\">\n                    <mat-hint\n                        [ngClass]=\"gameDetailsForm.get('imageUrl').invalid && gameDetailsForm.get('imageUrl').touched ? 'error-message' : 'd-none'\">\n                        Image Url field cannot be empty!\n                    </mat-hint>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-12\">\n                <mat-form-field class=\"w-100 mb-3\" appearance=\"fill\">\n                    <mat-label>Description</mat-label>\n                    <textarea matInput formControlName=\"description\" cdkTextareaAutosize cdkAutosizeMinRows=\"1\"\n                        cdkAutosizeMaxRows=\"5\">\n                    </textarea>\n                </mat-form-field>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module"}